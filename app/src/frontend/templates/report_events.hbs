{{#> layout}}
  <title>Event Report</title>
  <link rel="stylesheet" href="/public/css/volunteer_history.css">
  <link rel="stylesheet" href="/public/css/pagination.css">
  <script src="/public/js/pagination.js"></script>
  <script src="/public/js/report.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.22/jspdf.plugin.autotable.min.js"></script>



  <div class="table-container">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Event Report</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
        <button type="button" class="btn btn-sm btn-outline-secondary" id="pdfButton" onclick="generatePDF()">Export PDF</button>
        <button type="button" class="btn btn-sm btn-outline-secondary" id="csvButton" onclick="generateCSV()">Export CSV</button>
        </div>
    </div>
    </div>

  <div class="table-container">
      <table id="eventReportTable" class="table table-striped table-sm">
          <thead>
              <tr>
                <th>Event Name</th>
                <th>Description</th>
                <th>Required Skills</th>
                <th>Location</th>
                <th>Urgency</th>
                <th>Date</th>
                <th>Participant</th>
                <th>Participation Status</th>
              </tr>
          </thead>
          <tbody id="eventReportList">
              <!-- Event report will be populated here -->
          </tbody>
      </table>
      <div id="pagination" class="pagination"></div>
  </div>
 
<script>
    function getData() {
      const table = document.getElementById("eventReportTable");
      const rows = table.getElementsByTagName("tbody")[0].getElementsByTagName("tr");
      const data = [];

      for (let i = 0; i < rows.length; i++) {
        const cells = rows[i].getElementsByTagName("td");
        data.push({
          event_name: cells[0].textContent,
          description: cells[1].textContent,
          required_skills: cells[2].textContent,
          location: cells[3].textContent,
          urgency: cells[4].textContent,
          date: cells[5].textContent,
          participant: cells[6].textContent,
          participation_status: cells[7].textContent
        })
      }
      return data;
    }

function convertToCSV(headers, objArray) {
  const array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;
  let str = '';
  let row = '';

  // Add the headers to the CSV
  row = headers.join(','); 
  str += row + '\r\n'; 

  // Create the data rows
  for (let i = 0; i < array.length; i++) {
    let line = '';
    for (let index in array[i]) {
      if (line !== '') line += ',';
      line += `"${array[i][index]}"`; // Ensure data is enclosed in quotes
    }
    str += line + '\r\n';
  }

  return str;
}


function generateCSV() {
  let jsonData = getData();

  // Specify the headers explicitly
  const headers = [
    'Event Name',
    'Description',
    'Required Skills',
    'Location',
    'Urgency',
    'Date',
    'Participant',
    'Participation Status'
  ];

  const csv = convertToCSV(headers, jsonData);
  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
  const link = document.createElement('a');
  link.href = URL.createObjectURL(blob);
  link.download = 'event_report.csv'; // Correct filename
  link.click();
}


function generatePDF() {
  let jsonData = getData();
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF({
    orientation: "landscape" // Set orientation to landscape to fit more columns
  });

  doc.setFontSize(11);
  doc.text('Event Report:', 10, 10);

  // Define column headers and their widths
  const columns = [
    { header: 'Event Name', dataKey: 'event_name' },
    { header: 'Description', dataKey: 'description' },
    { header: 'Required Skills', dataKey: 'required_skills' },
    { header: 'Location', dataKey: 'location' },
    { header: 'Urgency', dataKey: 'urgency' },
    { header: 'Date', dataKey: 'date' },
    { header: 'Participant', dataKey: 'participant' },
    { header: 'Participation Status', dataKey: 'participation_status' }
  ];

  doc.autoTable({
    columns: columns,
    body: jsonData,
    startY: 20, // Starting position on the Y axis
    margin: { top: 10 }, // Margin from the top
    theme: 'grid', // Theme for table styling
    didDrawPage: function (data) {
      doc.setFontSize(9);
      doc.text(`Page ${doc.internal.getNumberOfPages()}`, 10, doc.internal.pageSize.height - 10);
    }
  });

  doc.save('event_report.pdf'); // Save the PDF with the specified filename
}


  </script>
  <script src="/public/js/report.js"></script>

{{/layout}}
